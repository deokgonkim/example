service: typescript-dynamodb
frameworkVersion: "3"
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  region: ${env:AWS_REGION}
  stage: ${opt:stage, "dev"}
  tracing:
    lambda: true
    apiGateway: true
  httpApi:
    cors:
      allowedOrigins:
        - http://localhost
        - http://localhost:8080
        - ${env:CORS_ORIGIN}
      allowedHeaders:
        - Content-Type
        - X-Amz-Date
        - Authorization
        - X-Api-Key
        - X-Amz-Security-Token
        - X-Amz-User-Agent
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
      allowCredentials: true
      # exposedResponseHeaders:
      #   - Special-Response-Header
      maxAge: 6000 # In seconds
  iam:
    role:
      statements:
        # Allow functions to list all buckets
        - Effect: Allow
          Action: 'dynamodb:*'
          # Resource: 'arn:aws:dynamodb:::table/TemperatureTable-${self:provider.stage}'
          Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/*'

plugins:
  - serverless-domain-manager
  - serverless-plugin-typescript

custom:
  customDomain:
    http:
      domainName: ${env:DOMAIN_NAME}
      stage: ${self:provider.stage}
      basePath: "v1/temperatures"
      certificateName: ${env:CERTIFICATE_NAME}
      createRoute53Record: true
      createRoute53IPv6Record: true
      endpointType: "regional"
      securityPolicy: tls_1_2

functions:
  list:
    handler: handler.list
    events:
      - httpApi:
          # - http:
          path: /
          method: get
  create:
    handler: handler.insert
    events:
      - httpApi:
          path: /
          method: post

resources: # CloudFormation template syntax from here on.
  Resources:
    TemperatureTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TemperatureTable-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: datetime
            AttributeType: S
        KeySchema:
          - AttributeName: datetime
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        # ProvisionedThroughput:
        #   ReadCapacityUnits: 1
        #   WriteCapacityUnits: 1
